[supervisord]
pidfile = {{ supervisord_pidfile }}
{% if supervisor_combined.daemon %}
logfile = {{ supervisord_logfile }}
{% else %}
logfile = /dev/stdout
logfile_maxbytes = 0
nodaemon = true
{% endif %}
environment = DJANGO_SETTINGS_MODULE="{{ settings }}"{% if pythonpath %},PYTHONPATH={{ pythonpath }}
{% endif %}

[unix_http_server]
file = {{ supervisord_sock }}

[supervisorctl]
serverurl = unix://{{ supervisord_sock }}

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

{% if supervisor_combined.daemon %}
[fcgi-program:uvicorn]
command = {{ dir_bin }}/uvicorn --fd 0 project.asgi:application
directory = {{ django_root }}
{% if django_combined.port %}
socket = tcp://localhost:{{ django_combined.port }}
{% else %}
socket = unix://{{ uvicorn_sock }}
socket_mode = 0770
{% endif %}

numprocs = {{ django_combined.workers }}
process_name = uvicorn-%(process_num)d
stdout_logfile = {{ dir_log }}/uvicorn.out.log
stderr_logfile = {{ dir_log }}/uvicorn.err.log

{% else %}
[program:django]
command = {{ python }} manage.py runserver
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stderr_logfile = /dev/stderr
stderr_logfile_maxbytes = 0

{% if django_with_node %}
[program:npm]
command = npm run dev
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stderr_logfile = /dev/stderr
stderr_logfile_maxbytes = 0
{% endif %}
{% endif %}

{% if celery %}
[program:celery]
command = {{ dir_bin }}/celery -A {{ django_project }} worker -l INFO{% if celery_combined.queues %} -Q {{ celery_combined.queues }}
{% endif %}
directory = {{ django_root }}
numprocs = {{ celery_combined.workers }}
process_name = celery-%(process_num)d
{% if supervisor_combined.daemon %}
stdout_logfile = {{ dir_log }}/celery.out.log
stderr_logfile = {{ dir_log }}/celery.err.log
{% else %}
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stderr_logfile = /dev/stderr
stderr_logfile_maxbytes = 0
{% endif %}
{% endif %}
