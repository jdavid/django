#jinja2: trim_blocks: "true", lstrip_blocks: "true"
upstream {{ django_name }} {
{% if django_combined.port %}
  server localhost:{{ django_combined.port }} fail_timeout=0;
{% else %}
  server unix:{{ uvicorn_sock }} fail_timeout=0;
{% endif %}
}

{% macro proxy() %}
        brotli on;
        proxy_pass http://{{ django_name }};
        proxy_redirect default;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;{% endmacro %}
{% macro logs(https) %}
    access_log /var/log/nginx/{{ django_name }}_http{% if https %}s{% endif %}_access.log {{ nginx_combined.log_format }};
    error_log /var/log/nginx/{{ django_name }}_http{% if https %}s{% endif %}_error.log;{% endmacro %}
{% macro ssl() %}
    ssl_certificate {{ certificate }};
    ssl_certificate_key {{ certificate_key }};
    {% if nginx_combined.hsts %}

    add_header Strict-Transport-Security "max-age={{ nginx_combined.hsts }}" always;
    {% endif %}
{% endmacro %}
{% macro main() %}
    location /{{ media_url }} {
        alias {{ dir_media }}/;
    }
    location /{{ static_url }} {
        alias {{ dir_static }}/;
        brotli_static on;
    }
    location {{ sendfile_url }} {
        internal;
        alias {{ dir_sendfile }}/;
    }
    location / {
{{ proxy() }}
{% if nginx_combined.timeout %}
        proxy_read_timeout {{ nginx_combined.timeout }};
{% endif %}
{% if nginx_combined.max_body_size %}
        client_max_body_size {{ nginx_combined.max_body_size }};
{% endif %}
    }
    location /ws/ {
        proxy_pass http://{{ django_name }};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }{% endmacro %}
server {
    listen 80;
{% if nginx_combined.http %}
    server_name {{ domains|join(" ") }};
{% else %}
    server_name {{ domains|join(" ") }};
{% endif %}

{{ logs(https=False) }}

    location /.well-known/acme-challenge {
        root {{ dir_www }};
    }

{% if nginx_combined.http %}
{{ main() }}
{% else %}
    location /ping {
{{ proxy() }}
    }

    location / {
        return 301 https://$host$request_uri;
    }
{% endif %}
}
{% if nginx_combined.https and certificate %}

server {
    listen 443 ssl;
    http2 on;
    server_name {{ domains|join(" ") }};

{{ logs(https=True) }}

{{ ssl() }}

{{ main() }}
}
{% endif %}
{% for src,dst in redirects.items() %}

server {
    listen 80;
    server_name {{ src }};
{{ logs(https=False) }}
    return 301 http://{{ dst }};
}
{% if nginx_combined.https and certificate %}

server {
    listen 443 ssl;
    http2 on;
    server_name {{ src }};
{{ logs(https=True) }}
{{ ssl() }}
    return 301 https://{{ dst }};
}
{% endif %}
{% endfor %}
